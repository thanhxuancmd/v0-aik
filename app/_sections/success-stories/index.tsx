"use client"

import type React from "react"

import { useState } from "react"
import { Button } from "@/components/ui/button"

const QuoteIcon = () => (
  <svg className="w-8 h-8" fill="currentColor" viewBox="0 0 24 24">
    <path d="M14.017 21v-7.391c0-5.704 3.731-9.57 8.983-10.609l.995 2.151c-2.432.917-3.995 3.638-3.995 5.849h4v10h-9.983zm-14.017 0v-7.391c0-5.704 3.748-9.57 9-10.609l.996 2.151c-2.433.917-3.996 3.638-3.996 5.849h4v10h-10z" />
  </svg>
)

const TrendingUpIcon = () => (
  <svg className="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M13 7h8m0 0v8m0-8l-8 8-4-4-6 6" />
  </svg>
)

const ClockIcon = () => (
  <svg className="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
    <path
      strokeLinecap="round"
      strokeLinejoin="round"
      strokeWidth={2}
      d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"
    />
  </svg>
)

const DollarIcon = () => (
  <svg className="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
    <path
      strokeLinecap="round"
      strokeLinejoin="round"
      strokeWidth={2}
      d="M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1M21 12a9 9 0 11-18 0 9 9 0 0118 0z"
    />
  </svg>
)

interface SuccessStory {
  id: number
  company: string
  industry: string
  logo: string
  challenge: string
  solution: string
  results: {
    metric: string
    value: string
    icon: React.ComponentType<{ className?: string }>
    color: string
  }[]
  quote: string
  author: string
  position: string
  timeline: string
  featured: boolean
}

const successStories: SuccessStory[] = [
  {
    id: 1,
    company: "Vietcombank",
    industry: "Ng√¢n h√†ng",
    logo: "/placeholder.svg?height=60&width=120&text=Vietcombank",
    challenge:
      "V·ªõi 15 tri·ªáu kh√°ch h√†ng, Vietcombank g·∫∑p kh√≥ khƒÉn trong vi·ªác x·ª≠ l√Ω 50,000+ y√™u c·∫ßu h·ªó tr·ª£ m·ªói ng√†y, th·ªùi gian ch·ªù trung b√¨nh 15 ph√∫t.",
    solution:
      "Tri·ªÉn khai AI Agents cho customer service v·ªõi kh·∫£ nƒÉng x·ª≠ l√Ω 70% y√™u c·∫ßu t·ª± ƒë·ªông, t√≠ch h·ª£p v·ªõi h·ªá th·ªëng core banking.",
    results: [
      {
        metric: "Gi·∫£m th·ªùi gian ch·ªù",
        value: "95%",
        icon: ClockIcon,
        color: "text-green-600",
      },
      {
        metric: "Ti·∫øt ki·ªám chi ph√≠",
        value: "200 t·ª∑ VNƒê",
        icon: DollarIcon,
        color: "text-blue-600",
      },
      {
        metric: "TƒÉng satisfaction",
        value: "40%",
        icon: TrendingUpIcon,
        color: "text-purple-600",
      },
    ],
    quote:
      "AI Agents ƒë√£ thay ƒë·ªïi ho√†n to√†n c√°ch ch√∫ng t√¥i ph·ª•c v·ª• kh√°ch h√†ng. T·ª´ 15 ph√∫t ch·ªù ƒë·ª£i xu·ªëng c√≤n 30 gi√¢y, kh√°ch h√†ng c·ª±c k·ª≥ h√†i l√≤ng.",
    author: "Nguy·ªÖn VƒÉn A",
    position: "Gi√°m ƒë·ªëc C√¥ng ngh·ªá",
    timeline: "Tri·ªÉn khai trong 3 th√°ng",
    featured: true,
  },
  {
    id: 2,
    company: "FPT Software",
    industry: "C√¥ng ngh·ªá",
    logo: "/placeholder.svg?height=60&width=120&text=FPT+Software",
    challenge:
      "Qu·∫£n l√Ω 40,000+ nh√¢n vi√™n to√†n c·∫ßu v·ªõi c√°c quy tr√¨nh HR ph·ª©c t·∫°p, t·ªën 60% th·ªùi gian c·ªßa team HR cho c√°c t√°c v·ª• l·∫∑p ƒëi l·∫∑p l·∫°i.",
    solution:
      "X√¢y d·ª±ng h·ªá th·ªëng AI Agents cho HR t·ª± ƒë·ªông h√≥a tuy·ªÉn d·ª•ng, onboarding, v√† qu·∫£n l√Ω nh√¢n s·ª± v·ªõi kh·∫£ nƒÉng x·ª≠ l√Ω ti·∫øng Vi·ªát v√† ti·∫øng Anh.",
    results: [
      {
        metric: "TƒÉng hi·ªáu qu·∫£ HR",
        value: "300%",
        icon: TrendingUpIcon,
        color: "text-green-600",
      },
      {
        metric: "Gi·∫£m th·ªùi gian tuy·ªÉn d·ª•ng",
        value: "70%",
        icon: ClockIcon,
        color: "text-blue-600",
      },
      {
        metric: "Ti·∫øt ki·ªám chi ph√≠",
        value: "150 t·ª∑ VNƒê",
        icon: DollarIcon,
        color: "text-purple-600",
      },
    ],
    quote:
      "AI Agents gi√∫p ch√∫ng t√¥i t·∫≠p trung v√†o chi·∫øn l∆∞·ª£c thay v√¨ c√°c c√¥ng vi·ªác th·ªß c√¥ng. Hi·ªáu qu·∫£ tuy·ªÉn d·ª•ng tƒÉng 300% l√† con s·ªë kh√¥ng th·ªÉ tin ƒë∆∞·ª£c.",
    author: "Tr·∫ßn Th·ªã B",
    position: "Gi√°m ƒë·ªëc Nh√¢n s·ª±",
    timeline: "Tri·ªÉn khai trong 4 th√°ng",
    featured: true,
  },
  {
    id: 3,
    company: "Vingroup",
    industry: "T·∫≠p ƒëo√†n ƒëa ng√†nh",
    logo: "/placeholder.svg?height=60&width=120&text=Vingroup",
    challenge:
      "Qu·∫£n l√Ω 2,000+ c·ª≠a h√†ng VinMart v·ªõi h√†ng tri·ªáu giao d·ªãch m·ªói ng√†y, kh√≥ khƒÉn trong vi·ªác t·ªëi ∆∞u h√≥a inventory v√† d·ª± ƒëo√°n nhu c·∫ßu.",
    solution:
      "Tri·ªÉn khai AI Agents cho retail analytics, d·ª± ƒëo√°n nhu c·∫ßu, v√† t·ªëi ∆∞u h√≥a chu·ªói cung ·ª©ng t·ª± ƒë·ªông cho to√†n b·ªô h·ªá th·ªëng.",
    results: [
      {
        metric: "TƒÉng doanh thu",
        value: "25%",
        icon: TrendingUpIcon,
        color: "text-green-600",
      },
      {
        metric: "Gi·∫£m waste",
        value: "40%",
        icon: ClockIcon,
        color: "text-blue-600",
      },
      {
        metric: "ROI",
        value: "450%",
        icon: DollarIcon,
        color: "text-purple-600",
      },
    ],
    quote:
      "AI Agents kh√¥ng ch·ªâ gi√∫p ch√∫ng t√¥i ti·∫øt ki·ªám chi ph√≠ m√† c√≤n tƒÉng tr·∫£i nghi·ªám kh√°ch h√†ng. ROI 450% trong nƒÉm ƒë·∫ßu l√† k·∫øt qu·∫£ v∆∞·ª£t mong ƒë·ª£i.",
    author: "L√™ VƒÉn C",
    position: "CEO VinCommerce",
    timeline: "Tri·ªÉn khai trong 6 th√°ng",
    featured: false,
  },
  {
    id: 4,
    company: "Techcombank",
    industry: "Ng√¢n h√†ng",
    logo: "/placeholder.svg?height=60&width=120&text=Techcombank",
    challenge:
      "X·ª≠ l√Ω 100,000+ giao d·ªãch nghi ng·ªù gian l·∫≠n m·ªói th√°ng v·ªõi ƒë·ªô ch√≠nh x√°c th·∫•p, g√¢y ·∫£nh h∆∞·ªüng ƒë·∫øn tr·∫£i nghi·ªám kh√°ch h√†ng.",
    solution:
      "Tri·ªÉn khai AI Agents cho fraud detection v·ªõi machine learning ti√™n ti·∫øn, ph√¢n t√≠ch real-time v√† t√≠ch h·ª£p v·ªõi h·ªá th·ªëng c·∫£nh b√°o.",
    results: [
      {
        metric: "TƒÉng ƒë·ªô ch√≠nh x√°c",
        value: "95%",
        icon: TrendingUpIcon,
        color: "text-green-600",
      },
      {
        metric: "Gi·∫£m false positive",
        value: "80%",
        icon: ClockIcon,
        color: "text-blue-600",
      },
      {
        metric: "Ti·∫øt ki·ªám",
        value: "120 t·ª∑ VNƒê",
        icon: DollarIcon,
        color: "text-purple-600",
      },
    ],
    quote:
      "AI Agents ƒë√£ c√°ch m·∫°ng h√≥a h·ªá th·ªëng ch·ªëng gian l·∫≠n c·ªßa ch√∫ng t√¥i. ƒê·ªô ch√≠nh x√°c 95% gi√∫p b·∫£o v·ªá kh√°ch h√†ng m√† kh√¥ng ·∫£nh h∆∞·ªüng tr·∫£i nghi·ªám.",
    author: "Ph·∫°m Th·ªã D",
    position: "Gi√°m ƒë·ªëc R·ªßi ro",
    timeline: "Tri·ªÉn khai trong 5 th√°ng",
    featured: false,
  },
]

export function SuccessStories() {
  const [activeStory, setActiveStory] = useState(0)
  const featuredStories = successStories.filter((story) => story.featured)
  const allStories = successStories

  return (
    <section className="bg-white py-16 md:py-24">
      <div className="container mx-auto px-4">
        {/* Header */}
        <div className="text-center mb-16">
          <div className="inline-flex items-center gap-2 px-4 py-2 rounded-full bg-green-100 border border-green-200 mb-6">
            <span className="text-sm text-green-700 font-medium">üèÜ C√¢u chuy·ªán th√†nh c√¥ng</span>
          </div>
          <h2 className="text-4xl md:text-5xl font-bold text-gray-900 mb-6">
            Doanh nghi·ªáp Vi·ªát <br />
            <span className="text-green-600">th√†nh c√¥ng</span> v·ªõi AI Agents
          </h2>
          <p className="text-xl text-gray-600 max-w-3xl mx-auto">
            Kh√°m ph√° c√°ch c√°c t·∫≠p ƒëo√†n h√†ng ƒë·∫ßu Vi·ªát Nam ƒë√£ chuy·ªÉn ƒë·ªïi s·ªë th√†nh c√¥ng v√† ƒë·∫°t ƒë∆∞·ª£c ROI ·∫•n t∆∞·ª£ng v·ªõi AI
            Agents
          </p>
        </div>

        {/* Featured Stories */}
        <div className="mb-16">
          <div className="grid grid-cols-1 lg:grid-cols-2 gap-12">
            {featuredStories.map((story, index) => (
              <div
                key={story.id}
                className="group relative overflow-hidden rounded-3xl bg-gradient-to-br from-gray-50 to-white border border-gray-200 p-8 hover:shadow-xl transition-all duration-500"
              >
                {/* Company Header */}
                <div className="flex items-center gap-4 mb-6">
                  <div className="w-16 h-16 bg-white rounded-xl border border-gray-200 p-2 flex items-center justify-center">
                    <img
                      src={story.logo || "/placeholder.svg"}
                      alt={story.company}
                      className="w-full h-full object-contain"
                    />
                  </div>
                  <div>
                    <h3 className="text-2xl font-bold text-gray-900">{story.company}</h3>
                    <p className="text-gray-600">{story.industry}</p>
                  </div>
                </div>

                {/* Challenge & Solution */}
                <div className="mb-8">
                  <div className="mb-4">
                    <h4 className="text-sm font-semibold text-red-600 uppercase tracking-wide mb-2">Th√°ch th·ª©c</h4>
                    <p className="text-gray-700 text-sm leading-relaxed">{story.challenge}</p>
                  </div>
                  <div>
                    <h4 className="text-sm font-semibold text-blue-600 uppercase tracking-wide mb-2">Gi·∫£i ph√°p</h4>
                    <p className="text-gray-700 text-sm leading-relaxed">{story.solution}</p>
                  </div>
                </div>

                {/* Results */}
                <div className="grid grid-cols-3 gap-4 mb-8">
                  {story.results.map((result, idx) => {
                    const Icon = result.icon
                    return (
                      <div key={idx} className="text-center">
                        <div
                          className={`w-10 h-10 rounded-lg bg-gray-100 flex items-center justify-center mx-auto mb-2 ${result.color}`}
                        >
                          <Icon className="w-5 h-5" />
                        </div>
                        <div className={`text-2xl font-bold ${result.color}`}>{result.value}</div>
                        <div className="text-xs text-gray-600">{result.metric}</div>
                      </div>
                    )
                  })}
                </div>

                {/* Quote */}
                <div className="relative">
                  <QuoteIcon className="text-gray-300 mb-4" />
                  <blockquote className="text-gray-700 italic mb-4 leading-relaxed">"{story.quote}"</blockquote>
                  <div className="flex items-center justify-between">
                    <div>
                      <div className="font-semibold text-gray-900">{story.author}</div>
                      <div className="text-sm text-gray-600">{story.position}</div>
                    </div>
                    <div className="text-sm text-gray-500">{story.timeline}</div>
                  </div>
                </div>
              </div>
            ))}
          </div>
        </div>

        {/* All Stories Grid */}
        <div className="mb-16">
          <h3 className="text-3xl font-bold text-gray-900 text-center mb-12">Th√™m nhi·ªÅu c√¢u chuy·ªán th√†nh c√¥ng</h3>
          <div className="grid grid-cols-1 md:grid-cols-2 gap-8">
            {allStories
              .filter((story) => !story.featured)
              .map((story) => (
                <div
                  key={story.id}
                  className="group bg-white rounded-2xl border border-gray-200 p-6 hover:shadow-lg transition-all duration-300"
                >
                  <div className="flex items-center gap-3 mb-4">
                    <div className="w-12 h-12 bg-gray-50 rounded-lg border border-gray-200 p-1 flex items-center justify-center">
                      <img
                        src={story.logo || "/placeholder.svg"}
                        alt={story.company}
                        className="w-full h-full object-contain"
                      />
                    </div>
                    <div>
                      <h4 className="text-lg font-semibold text-gray-900">{story.company}</h4>
                      <p className="text-sm text-gray-600">{story.industry}</p>
                    </div>
                  </div>

                  <div className="grid grid-cols-3 gap-3 mb-4">
                    {story.results.map((result, idx) => {
                      const Icon = result.icon
                      return (
                        <div key={idx} className="text-center">
                          <div className={`text-xl font-bold ${result.color}`}>{result.value}</div>
                          <div className="text-xs text-gray-600">{result.metric}</div>
                        </div>
                      )
                    })}
                  </div>

                  <blockquote className="text-sm text-gray-700 italic mb-3 line-clamp-3">"{story.quote}"</blockquote>
                  <div className="text-xs text-gray-500">
                    {story.author} - {story.position}
                  </div>
                </div>
              ))}
          </div>
        </div>

        {/* CTA Section */}
        <div className="text-center">
          <div className="bg-gradient-to-r from-green-600 to-blue-600 rounded-3xl p-8 md:p-12 text-white">
            <h3 className="text-3xl font-bold mb-4">C√¢u chuy·ªán th√†nh c√¥ng ti·∫øp theo l√† c·ªßa b·∫°n</h3>
            <p className="text-xl opacity-90 mb-8 max-w-2xl mx-auto">
              Tham gia c√πng 500+ doanh nghi·ªáp Vi·ªát Nam ƒë√£ chuy·ªÉn ƒë·ªïi th√†nh c√¥ng v·ªõi AI Agents. B·∫Øt ƒë·∫ßu h√†nh tr√¨nh c·ªßa
              b·∫°n ngay h√¥m nay.
            </p>
            <div className="flex flex-col sm:flex-row gap-4 justify-center">
              <Button className="bg-white text-green-600 hover:bg-gray-100 px-8 py-4 rounded-xl font-semibold">
                B·∫Øt ƒë·∫ßu mi·ªÖn ph√≠
              </Button>
              <Button
                variant="outline"
                className="border-2 border-white text-white hover:bg-white hover:text-green-600 px-8 py-4 rounded-xl font-semibold bg-transparent"
              >
                T∆∞ v·∫•n 1-1
              </Button>
            </div>
          </div>
        </div>
      </div>
    </section>
  )
}

export default SuccessStories
